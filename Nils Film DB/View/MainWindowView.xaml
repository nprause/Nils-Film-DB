<UserControl x:Class="Nils_Film_DB.View.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="480" d:DesignWidth="640">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="10" />
            <RowDefinition Height="Auto" MinHeight="10" />
            <RowDefinition Height="Auto" MinHeight="0" />
            <RowDefinition Height="*" MinHeight="10" />
        </Grid.RowDefinitions>

        <!-- Menu and Connection Status -->
        <DockPanel Grid.Row="0">
            <Menu HorizontalAlignment="Stretch" Height="Auto" Margin="2" >
                <MenuItem Header="Menü" BorderThickness="2" >
                    <MenuItem Header="_Verbinden" Command="{Binding Menu_Connect, Mode=OneWay}" />
                    <MenuItem Header="_Sammlung Scannen" Command="{Binding Menu_Scan, Mode=OneWay}" />
                    <MenuItem Header="_TMDb Verbindung" Command="{Binding Menu_TMDb, Mode=OneWay}" />
                    <MenuItem Header="_Beenden" Command="{Binding Menu_Exit, Mode=OneWay}"/>
                </MenuItem>
            </Menu>
            <TextBlock  HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="0" Foreground="#FF19F719" Background="Black" Margin="2" Padding="2" Text="{Binding Serverstatustext}" />
        </DockPanel>

        <!-- Search Field and Search Options -->
        <TextBox x:Name="SearchBox" Grid.Row="1" HorizontalAlignment="Stretch" Height="23" Margin="2" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding Searchboxtext, UpdateSourceTrigger=PropertyChanged}"  >
            <!-- The following lines turn Events to Commands, which call methods of the ViewModel via Databinding -->
            <TextBox.InputBindings>          
                <KeyBinding Key="Enter" Command="{Binding SearchboxEnter, Mode=OneWay}"/>               
            </TextBox.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding SearchboxOnfocus, Mode=OneWay}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <!-- The search options are hidden when user is not perfoming a search. The Checkboxes are created dynamically -->
        <DockPanel Grid.Row="2" Visibility="{Binding SearchboxVisibility, Converter={StaticResource BoolToVis}}" > 
        <ItemsControl ItemsSource="{Binding SearchColumnBoxes}"  >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Margin="2,0,10,0" Content="{Binding Title}" IsChecked="{Binding IsChecked}" VerticalAlignment="Center"   />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- Combobox the switch bewteen movies and versions for checkboxes blow -->
            <ComboBox  VerticalAlignment="Stretch" Width="80" HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="2">
                <ComboBoxItem Content="Filme" IsSelected="{Binding ComboboxMoviesIsSelcted}" />
                <ComboBoxItem Content="Versionen" IsSelected="{Binding ComboboxVersionsIsSelcted}"/>
            </ComboBox>
            <!-- Checkboxes to search movies or versions that are not is collection of selected user -->
            <ItemsControl ItemsSource="{Binding SearchUserBoxes}" HorizontalAlignment="Right" DockPanel.Dock="Right">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Margin="2,0,10,0" Content="{Binding Title}" IsChecked="{Binding IsChecked}" VerticalAlignment="Center"  />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Text="nicht in: " VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2"/>

        </DockPanel> 

        <!-- Data Display: Tabs of the TabControl are created dynamically at runtime -->
        <TabControl ItemsSource="{Binding Tabs}" HorizontalAlignment="stretch" VerticalAlignment="Stretch" Margin="2" Grid.Row="3" >
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Data.TableName}"  />
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <DataGrid ItemsSource="{Binding Data}" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" AutoGeneratingColumn="OnAutoGeneratingColumn" >
                        <DataGrid.ContextMenu>
                            <ContextMenu >
                                <MenuItem Header="Löschen" IsEnabled="{Binding ContextMenuDeleteIsEnabled}" Command="{Binding ContextMenuDelete}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                                <MenuItem Header="Edit" IsEnabled="{Binding ContextMenuEditIsEnabled}" Command="{Binding ContextMenuEdit}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>

                </DataTemplate>

            </TabControl.ContentTemplate>

        </TabControl>
    </Grid>
</UserControl>
